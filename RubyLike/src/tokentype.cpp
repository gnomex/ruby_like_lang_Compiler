#include "tokentype.h"

TokenType::TokenType()
{
    next = NULL;
}

TokenType::~TokenType(){

}
/*****************************************************************************************************
 *  setClasse -> Classe to token (inteiro/float/identificador/lista)
 *
 ****************************************************************************************************/
void TokenType::setClasse(int classe)
{
    this->classe = classe;
}
/*****************************************************************************************************
 *  setToken -> Token
 *
 ****************************************************************************************************/
void TokenType::setToken(string repr){
    this->repr = repr;
}
/*****************************************************************************************************
 *  setLine -> linha onde o token esta
 *
 ****************************************************************************************************/
void TokenType::setLine(int line){
    this->line = line;
}
/*****************************************************************************************************
 *  setColumn -> coluna onde o token inicia
 *
 ****************************************************************************************************/
void TokenType::setColumn(int column){
    this->column = column;
}
/*****************************************************************************************************
 *  getClasse -> recupera classe do token
 *
 ****************************************************************************************************/
int TokenType::getClasse(){
    return classe;
}
/*****************************************************************************************************
 *  getToken -> recupera o token
 *
 ****************************************************************************************************/
string TokenType::getToken(){
    return repr;
}
/*****************************************************************************************************
 *  getLine -> retorna linha
 *
 ****************************************************************************************************/
int TokenType::getLine(){
    return line;
}
/*****************************************************************************************************
 *  getColumn -> retorna coluna
 *
 ****************************************************************************************************/
int TokenType::getColumn(){
    return column;
}
/*****************************************************************************************************
 *  setNext -> seta proximo token da AST
 *  AST segundo o que entendi e a professora concordo, eh uma lista, em que cada item
 *  eh uma arvore, com sub arvores......
 *  Assim cada item eh uma raiz de uma arvore
 *
 ****************************************************************************************************/
void TokenType::setNext(TokenType *no){
    next = no;
}
/*****************************************************************************************************
 *  getNext -> retorna raiz de uma arvore da lista
 *
 ****************************************************************************************************/
TokenType* TokenType::getNext(){
    return next;
}
/*****************************************************************************************************
 *  setType -> seta tipo dinamico na variavel, tambem usado na analise semantica
 *  para ver se faz sentido comparacao ou operacao entre tipos
 *
 ****************************************************************************************************/
void TokenType::setType(int type){
    this->type = type;
}
/*****************************************************************************************************
 *  getType -> retorna tipo atual do token
 *
 ****************************************************************************************************/
int TokenType::getType(){
    return type;
}
