#include "tokentype.h"

TokenType::TokenType()
{
    ref = initBlock = endBlock = NULL;
    statmentEnd = statmentInit = false;
}

TokenType::~TokenType(){

}
/*****************************************************************************************************
 *  setClasse -> Classe to token (inteiro/float/identificador/lista)
 *
 ****************************************************************************************************/
void TokenType::setClasse(char classe)
{
    this->classe = classe;
}
/*****************************************************************************************************
 *  setToken -> Token
 *
 ****************************************************************************************************/
void TokenType::setToken(string repr){
    this->repr = repr;
}
/*****************************************************************************************************
 *  setLine -> linha onde o token esta
 *
 ****************************************************************************************************/
void TokenType::setLine(int line){
    this->line = line;
}
/*****************************************************************************************************
 *  setColumn -> coluna onde o token inicia
 *
 ****************************************************************************************************/
void TokenType::setColumn(int column){
    this->column = column;
}
/*****************************************************************************************************
 *  getClasse -> recupera classe do token
 *
 ****************************************************************************************************/
char TokenType::getClasse(){
    return classe;
}
/*****************************************************************************************************
 *  getToken -> recupera o token
 *
 ****************************************************************************************************/
string TokenType::getToken(){
    return repr;
}
/*****************************************************************************************************
 *  getLine -> retorna linha
 *
 ****************************************************************************************************/
int TokenType::getLine(){
    return line;
}
/*****************************************************************************************************
 *  getColumn -> retorna coluna
 *
 ****************************************************************************************************/
int TokenType::getColumn(){
    return column;
}
/*****************************************************************************************************
 *  setReference -> seta referencia para um token reservado (ex.: if)
 *
 ****************************************************************************************************/
void TokenType::setReference(TokenType* ref){
    this->ref = ref;
}
/*****************************************************************************************************
 *  setInitBlock -> seta inicio do bloco para um token reservado
 *
 ****************************************************************************************************/
void TokenType::setInitBlock(TokenType* init){
    initBlock = init;
}
/*****************************************************************************************************
 *  setEndBlock -> seta fim do bloco para um token reservado
 *
 ****************************************************************************************************/
void TokenType::setEndBlock(TokenType* end){
    endBlock = end;
}
/*****************************************************************************************************
 *  getReference -> retorna referencia de algum token
 *
 ****************************************************************************************************/
TokenType* TokenType::getReference(){
    return ref;
}
/*****************************************************************************************************
 *  getInitBlock -> retorna referencia para token de inicio de bloco
 *
 ****************************************************************************************************/
TokenType* TokenType::getInitBlock(){
    return initBlock;
}
/*****************************************************************************************************
 *  getEndBlock -> retorna referencia para token de fim de bloco
 *
 ****************************************************************************************************/
TokenType* TokenType::getEndBlock(){
    return endBlock;
}
/*****************************************************************************************************
 *  setStatementInit -> seta token de inicio de expressao logica
 *
 ****************************************************************************************************/
void TokenType::setStatmentInit(bool init){
    statmentInit = init;
}
/*****************************************************************************************************
 *  setStatementEnd -> seta token de fim de expressao logica
 *
 ****************************************************************************************************/
void TokenType::setStatmentEnd(bool end){
    statmentEnd = end;
}
/*****************************************************************************************************
 *  getStatementInit ->
 *  True => se existe inicio de expressao logica '('
 *  False => se nao existe
 ****************************************************************************************************/
bool TokenType::getStatmentInit(){
    return statmentInit;
}
/*****************************************************************************************************
 *  getStatementEnd ->
 *  True => se existe fim de expressao logica ')'
 *  False => se nao existe
 ****************************************************************************************************/
bool TokenType::getStatmentEnd(){
    return statmentEnd;
}
